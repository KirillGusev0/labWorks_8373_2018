#include "pch.h"
#include <iostream>
#include <ctime>
#include <conio.h>
#include <stdio.h>
#include <stdlib.h>


using namespace std;

const int SIZE = 9;

int str, colum;
int number;


int sudoku[SIZE][SIZE] =
{
{0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0},
};



int NUMBER1(int number)
{
	
	int  one = 1, two = 2, tree = 3, four = 4, five = 5, six = 6, seven = 7, eight = 8, nine = 9;
	int *a1 = &one;
	int *a2 = &two;
	int *a3 = &tree;
	int *a4 = &four;
	int *a5 = &five;
	int *a6 = &six;
	int *a7 = &seven;
	int *a8 = &eight;
	int *a9 = &nine;

	switch (number)
	{
	case 1:
		
		
		 sudoku[str][colum] = *a1;
		for (int i = 1; i <= SIZE; i++)
		{
			for (int j = 1; j <= SIZE; j++)
			{
				cout << " " << sudoku[i][j];
			}
			cout << endl;
		}
		break;
	case 2:
		sudoku[str][colum] = *a2;
		for (int i = 1; i <= SIZE; i++)
		{
			for (int j = 1; j <= SIZE; j++)
			{
				cout << " " << sudoku[i][j];
			}
			cout << endl;
		}
		break;
	case 3:
		sudoku[str][colum] = *a3;
		for (int i = 1; i <= SIZE; i++)
		{
			for (int j = 1; j <= SIZE; j++)
			{
				cout << " " << sudoku[i][j];
			}
			cout << endl;
		}
		break;
	case 4:
		sudoku[str][colum] = *a4;
		for (int i = 1; i <= SIZE; i++)
		{
			for (int j = 1; j <= SIZE; j++)
			{
				cout << " " << sudoku[i][j];
			}
			cout << endl;
		}
		break;
	case 5:
		sudoku[str][colum] = *a5;
		for (int i = 1; i <= SIZE; i++)
		{
			for (int j = 1; j <= SIZE; j++)
			{
				cout << " " << sudoku[i][j];
			}
			cout << endl;
		}
		break;
	case 6:
		sudoku[str][colum] = *a6;
		for (int i = 1; i <= SIZE; i++)
		{
			for (int j = 1; j <= SIZE; j++)
			{
				cout << " " << sudoku[i][j];
			}
			cout << endl;
		}
		break;
	case 7:
		sudoku[str][colum] = *a7;
		for (int i = 1; i <= SIZE; i++)
		{
			for (int j = 1; j <= SIZE; j++)
			{
				cout << " " << sudoku[i][j];
			}
			cout << endl;
		}
		break;
	case 8:
		sudoku[str][colum] = *a8;
		for (int i = 1; i <= SIZE; i++)
		{
			for (int j = 1; j <= SIZE; j++)
			{
				cout << " " << sudoku[i][j];
			}
			cout << endl;
		}
		break;
	case 9:
		sudoku[str][colum] = *a9;
		for (int i = 1; i <= SIZE; i++)
		{
			for (int j = 1; j <= SIZE; j++)
			{
				cout << " " << sudoku[i][j];
			}
			cout << endl;
		}
		break;
	default:
		cout << "wrong number ";
		cout << endl;
	break;
	}
	return number;
};



int COLUM1 (int colum)
{
	
	switch (colum)
	{
	case 1:
		cout << "Write number ";
		cin >> number;
		NUMBER1(number);
		break;
	case 2 :
		cout << "Write number ";
		cin >> number;
		NUMBER1(number);
		break;
	case 3:
		cout << "Write number ";
		cin >> number;
		NUMBER1(number);
		break;
	case 4:
		cout << "Write number ";
		cin >> number;
		NUMBER1(number);
		break;
	case 5:
		cout << "Write number ";
		cin >> number;
		NUMBER1(number);
		break;
	case 6:
		cout << "Write number ";
		cin >> number;
		NUMBER1(number); 
		break;
	case 7:
		cout << "Write number ";
		cin >> number;
		NUMBER1(number);
		break;
	case 8:
		cout << "Write number ";
		cin >> number;
		NUMBER1(number);
		break;
	case 9 :
		cout << "Write number ";
		cin >> number;
		NUMBER1(number);
		break;
	default:
		cout << "wrong colum ";
		cout << endl;
	break;
	}
	return colum;
	
};


int STR1(int str)
{
	
	switch (str)
	{
	case 1:
		cout << "Write colum ";
		cin >> colum;
		COLUM1(colum);
		break;
	case 2:
		cout << "Write colum ";
		cin >> colum;
		COLUM1(colum);
		break;
	case 3:
		cout << "Write colum ";
		cin >> colum;
		COLUM1(colum);
		break;
	case 4:
		cout << "Write colum ";
		cin >> colum;
		COLUM1(colum);
		break;
	case 5:
		cout << "Write colum ";
		cin >> colum;
		COLUM1(colum);
		break;
	case 6:
		cout << "Write colum ";
		cin >> colum;
		COLUM1(colum);
		break;
	case 7:
		cout << "Write colum ";
		cin >> colum;
		COLUM1(colum);
		break;
	case 8:
		cout << "Write colum ";
		cin >> colum;
		COLUM1(colum);
		break;
	case 9:
		cout << "Write colum ";
		cin >> colum;
		COLUM1(colum);
		break;
	default:
		cout << "wrong str ";
		cout << endl;
	break;
	}
	return sudoku[str][colum];
};


int main()
{
	
	cout << "	Rules " << endl;
	cout << " The Classic Sudoku is a number placing puzzle based on a 9x9 grid with several given numbers. " << endl;
	cout << " The object is to place the numbers 1 to 9 " << endl;
	cout<< "in the empty squares so that each row, each column and each 3x3 box contains the same number only once. " << endl;
	cout << " You shold replase all 0 to numbers by the rules ";
	cout << endl;
	cout << "Write number of str,colum and number what you want to inscribe ";
	cout << endl;
	cout << " You have only 81 turn ";
	cout << endl;
	
		for (int i = 0; i < SIZE; i++)
		{
			for (int j = 0; j < SIZE; j++)
			{
				cout << " " << sudoku[i][j];
			}
			cout << endl;
		}
		for (int i = 0; i <= SIZE * SIZE; i++)
		{

			cout << endl;
			cout << "Write str ";
			cin >> str;
			STR1(str);

		}
	

	
	
	system("pause");
	return 0;
}
